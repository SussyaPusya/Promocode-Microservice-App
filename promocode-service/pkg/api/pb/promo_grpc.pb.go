// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v3.21.12
// source: promo.proto

package promopb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	PromoService_CreatePromo_FullMethodName   = "/api.PromoService/CreatePromo"
	PromoService_ListPromo_FullMethodName     = "/api.PromoService/ListPromo"
	PromoService_GetPromo_FullMethodName      = "/api.PromoService/GetPromo"
	PromoService_UpdatePromo_FullMethodName   = "/api.PromoService/UpdatePromo"
	PromoService_DeletePromo_FullMethodName   = "/api.PromoService/DeletePromo"
	PromoService_ActivatePromo_FullMethodName = "/api.PromoService/ActivatePromo"
	PromoService_PromoPing_FullMethodName     = "/api.PromoService/PromoPing"
)

// PromoServiceClient is the client API for PromoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PromoServiceClient interface {
	CreatePromo(ctx context.Context, in *CreatePromoRequest, opts ...grpc.CallOption) (*CreatePromoResponse, error)
	ListPromo(ctx context.Context, in *ListPromoRequest, opts ...grpc.CallOption) (*ListPromoResponse, error)
	GetPromo(ctx context.Context, in *GetPromoRequest, opts ...grpc.CallOption) (*GetPromoResponse, error)
	UpdatePromo(ctx context.Context, in *UpdatePromoRequest, opts ...grpc.CallOption) (*UpdatePromoResponse, error)
	DeletePromo(ctx context.Context, in *DeletePromoRequest, opts ...grpc.CallOption) (*DeletePromoResponse, error)
	ActivatePromo(ctx context.Context, in *ActivatePromoRequest, opts ...grpc.CallOption) (*ActivatePromoResponse, error)
	PromoPing(ctx context.Context, in *PromoPingRequest, opts ...grpc.CallOption) (*PromoPingResponse, error)
}

type promoServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPromoServiceClient(cc grpc.ClientConnInterface) PromoServiceClient {
	return &promoServiceClient{cc}
}

func (c *promoServiceClient) CreatePromo(ctx context.Context, in *CreatePromoRequest, opts ...grpc.CallOption) (*CreatePromoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreatePromoResponse)
	err := c.cc.Invoke(ctx, PromoService_CreatePromo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promoServiceClient) ListPromo(ctx context.Context, in *ListPromoRequest, opts ...grpc.CallOption) (*ListPromoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ListPromoResponse)
	err := c.cc.Invoke(ctx, PromoService_ListPromo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promoServiceClient) GetPromo(ctx context.Context, in *GetPromoRequest, opts ...grpc.CallOption) (*GetPromoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetPromoResponse)
	err := c.cc.Invoke(ctx, PromoService_GetPromo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promoServiceClient) UpdatePromo(ctx context.Context, in *UpdatePromoRequest, opts ...grpc.CallOption) (*UpdatePromoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdatePromoResponse)
	err := c.cc.Invoke(ctx, PromoService_UpdatePromo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promoServiceClient) DeletePromo(ctx context.Context, in *DeletePromoRequest, opts ...grpc.CallOption) (*DeletePromoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeletePromoResponse)
	err := c.cc.Invoke(ctx, PromoService_DeletePromo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promoServiceClient) ActivatePromo(ctx context.Context, in *ActivatePromoRequest, opts ...grpc.CallOption) (*ActivatePromoResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(ActivatePromoResponse)
	err := c.cc.Invoke(ctx, PromoService_ActivatePromo_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promoServiceClient) PromoPing(ctx context.Context, in *PromoPingRequest, opts ...grpc.CallOption) (*PromoPingResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(PromoPingResponse)
	err := c.cc.Invoke(ctx, PromoService_PromoPing_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PromoServiceServer is the server API for PromoService service.
// All implementations must embed UnimplementedPromoServiceServer
// for forward compatibility.
type PromoServiceServer interface {
	CreatePromo(context.Context, *CreatePromoRequest) (*CreatePromoResponse, error)
	ListPromo(context.Context, *ListPromoRequest) (*ListPromoResponse, error)
	GetPromo(context.Context, *GetPromoRequest) (*GetPromoResponse, error)
	UpdatePromo(context.Context, *UpdatePromoRequest) (*UpdatePromoResponse, error)
	DeletePromo(context.Context, *DeletePromoRequest) (*DeletePromoResponse, error)
	ActivatePromo(context.Context, *ActivatePromoRequest) (*ActivatePromoResponse, error)
	PromoPing(context.Context, *PromoPingRequest) (*PromoPingResponse, error)
	mustEmbedUnimplementedPromoServiceServer()
}

// UnimplementedPromoServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedPromoServiceServer struct{}

func (UnimplementedPromoServiceServer) CreatePromo(context.Context, *CreatePromoRequest) (*CreatePromoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePromo not implemented")
}
func (UnimplementedPromoServiceServer) ListPromo(context.Context, *ListPromoRequest) (*ListPromoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPromo not implemented")
}
func (UnimplementedPromoServiceServer) GetPromo(context.Context, *GetPromoRequest) (*GetPromoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPromo not implemented")
}
func (UnimplementedPromoServiceServer) UpdatePromo(context.Context, *UpdatePromoRequest) (*UpdatePromoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePromo not implemented")
}
func (UnimplementedPromoServiceServer) DeletePromo(context.Context, *DeletePromoRequest) (*DeletePromoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePromo not implemented")
}
func (UnimplementedPromoServiceServer) ActivatePromo(context.Context, *ActivatePromoRequest) (*ActivatePromoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ActivatePromo not implemented")
}
func (UnimplementedPromoServiceServer) PromoPing(context.Context, *PromoPingRequest) (*PromoPingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PromoPing not implemented")
}
func (UnimplementedPromoServiceServer) mustEmbedUnimplementedPromoServiceServer() {}
func (UnimplementedPromoServiceServer) testEmbeddedByValue()                      {}

// UnsafePromoServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PromoServiceServer will
// result in compilation errors.
type UnsafePromoServiceServer interface {
	mustEmbedUnimplementedPromoServiceServer()
}

func RegisterPromoServiceServer(s grpc.ServiceRegistrar, srv PromoServiceServer) {
	// If the following call pancis, it indicates UnimplementedPromoServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&PromoService_ServiceDesc, srv)
}

func _PromoService_CreatePromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePromoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromoServiceServer).CreatePromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromoService_CreatePromo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromoServiceServer).CreatePromo(ctx, req.(*CreatePromoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromoService_ListPromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPromoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromoServiceServer).ListPromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromoService_ListPromo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromoServiceServer).ListPromo(ctx, req.(*ListPromoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromoService_GetPromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPromoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromoServiceServer).GetPromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromoService_GetPromo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromoServiceServer).GetPromo(ctx, req.(*GetPromoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromoService_UpdatePromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePromoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromoServiceServer).UpdatePromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromoService_UpdatePromo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromoServiceServer).UpdatePromo(ctx, req.(*UpdatePromoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromoService_DeletePromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePromoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromoServiceServer).DeletePromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromoService_DeletePromo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromoServiceServer).DeletePromo(ctx, req.(*DeletePromoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromoService_ActivatePromo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActivatePromoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromoServiceServer).ActivatePromo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromoService_ActivatePromo_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromoServiceServer).ActivatePromo(ctx, req.(*ActivatePromoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromoService_PromoPing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PromoPingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromoServiceServer).PromoPing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: PromoService_PromoPing_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromoServiceServer).PromoPing(ctx, req.(*PromoPingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PromoService_ServiceDesc is the grpc.ServiceDesc for PromoService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PromoService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.PromoService",
	HandlerType: (*PromoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePromo",
			Handler:    _PromoService_CreatePromo_Handler,
		},
		{
			MethodName: "ListPromo",
			Handler:    _PromoService_ListPromo_Handler,
		},
		{
			MethodName: "GetPromo",
			Handler:    _PromoService_GetPromo_Handler,
		},
		{
			MethodName: "UpdatePromo",
			Handler:    _PromoService_UpdatePromo_Handler,
		},
		{
			MethodName: "DeletePromo",
			Handler:    _PromoService_DeletePromo_Handler,
		},
		{
			MethodName: "ActivatePromo",
			Handler:    _PromoService_ActivatePromo_Handler,
		},
		{
			MethodName: "PromoPing",
			Handler:    _PromoService_PromoPing_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "promo.proto",
}
