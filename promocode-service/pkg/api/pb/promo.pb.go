// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v3.21.12
// source: promo.proto

package promopb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Mode int32

const (
	Mode_COMMON Mode = 0
	Mode_UNIQUE Mode = 1
)

// Enum value maps for Mode.
var (
	Mode_name = map[int32]string{
		0: "COMMON",
		1: "UNIQUE",
	}
	Mode_value = map[string]int32{
		"COMMON": 0,
		"UNIQUE": 1,
	}
)

func (x Mode) Enum() *Mode {
	p := new(Mode)
	*p = x
	return p
}

func (x Mode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Mode) Descriptor() protoreflect.EnumDescriptor {
	return file_promo_proto_enumTypes[0].Descriptor()
}

func (Mode) Type() protoreflect.EnumType {
	return &file_promo_proto_enumTypes[0]
}

func (x Mode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Mode.Descriptor instead.
func (Mode) EnumDescriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{0}
}

type PromoSortBy int32

const (
	PromoSortBy_ACTIVE_FROM  PromoSortBy = 0
	PromoSortBy_ACTIVE_UNTIL PromoSortBy = 1
)

// Enum value maps for PromoSortBy.
var (
	PromoSortBy_name = map[int32]string{
		0: "ACTIVE_FROM",
		1: "ACTIVE_UNTIL",
	}
	PromoSortBy_value = map[string]int32{
		"ACTIVE_FROM":  0,
		"ACTIVE_UNTIL": 1,
	}
)

func (x PromoSortBy) Enum() *PromoSortBy {
	p := new(PromoSortBy)
	*p = x
	return p
}

func (x PromoSortBy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PromoSortBy) Descriptor() protoreflect.EnumDescriptor {
	return file_promo_proto_enumTypes[1].Descriptor()
}

func (PromoSortBy) Type() protoreflect.EnumType {
	return &file_promo_proto_enumTypes[1]
}

func (x PromoSortBy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PromoSortBy.Descriptor instead.
func (PromoSortBy) EnumDescriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{1}
}

type Reason int32

const (
	Reason_OK                  Reason = 0
	Reason_ANTIFRAUD           Reason = 1
	Reason_NO_ACTIVATIONS_LEFT Reason = 2
)

// Enum value maps for Reason.
var (
	Reason_name = map[int32]string{
		0: "OK",
		1: "ANTIFRAUD",
		2: "NO_ACTIVATIONS_LEFT",
	}
	Reason_value = map[string]int32{
		"OK":                  0,
		"ANTIFRAUD":           1,
		"NO_ACTIVATIONS_LEFT": 2,
	}
)

func (x Reason) Enum() *Reason {
	p := new(Reason)
	*p = x
	return p
}

func (x Reason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Reason) Descriptor() protoreflect.EnumDescriptor {
	return file_promo_proto_enumTypes[2].Descriptor()
}

func (Reason) Type() protoreflect.EnumType {
	return &file_promo_proto_enumTypes[2]
}

func (x Reason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Reason.Descriptor instead.
func (Reason) EnumDescriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{2}
}

type PromoPingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromoPingRequest) Reset() {
	*x = PromoPingRequest{}
	mi := &file_promo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromoPingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoPingRequest) ProtoMessage() {}

func (x *PromoPingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoPingRequest.ProtoReflect.Descriptor instead.
func (*PromoPingRequest) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{0}
}

type PromoPingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromoPingResponse) Reset() {
	*x = PromoPingResponse{}
	mi := &file_promo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromoPingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoPingResponse) ProtoMessage() {}

func (x *PromoPingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoPingResponse.ProtoReflect.Descriptor instead.
func (*PromoPingResponse) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{1}
}

func (x *PromoPingResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type CreatePromoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Mode          Mode                   `protobuf:"varint,1,opt,name=mode,proto3,enum=api.Mode" json:"mode,omitempty"`
	CompanyId     *string                `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
	PromoCommon   *string                `protobuf:"bytes,3,opt,name=promo_common,json=promoCommon,proto3,oneof" json:"promo_common,omitempty"`
	PromoUnique   []string               `protobuf:"bytes,4,rep,name=promo_unique,json=promoUnique,proto3" json:"promo_unique,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	ImageUrl      *string                `protobuf:"bytes,6,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	Target        *Target                `protobuf:"bytes,7,opt,name=target,proto3" json:"target,omitempty"`
	MaxCount      int64                  `protobuf:"varint,8,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`
	ActiveFrom    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=active_from,json=activeFrom,proto3" json:"active_from,omitempty"`
	ActiveUntil   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=active_until,json=activeUntil,proto3" json:"active_until,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePromoRequest) Reset() {
	*x = CreatePromoRequest{}
	mi := &file_promo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePromoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePromoRequest) ProtoMessage() {}

func (x *CreatePromoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePromoRequest.ProtoReflect.Descriptor instead.
func (*CreatePromoRequest) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{2}
}

func (x *CreatePromoRequest) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_COMMON
}

func (x *CreatePromoRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

func (x *CreatePromoRequest) GetPromoCommon() string {
	if x != nil && x.PromoCommon != nil {
		return *x.PromoCommon
	}
	return ""
}

func (x *CreatePromoRequest) GetPromoUnique() []string {
	if x != nil {
		return x.PromoUnique
	}
	return nil
}

func (x *CreatePromoRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePromoRequest) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *CreatePromoRequest) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *CreatePromoRequest) GetMaxCount() int64 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *CreatePromoRequest) GetActiveFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveFrom
	}
	return nil
}

func (x *CreatePromoRequest) GetActiveUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveUntil
	}
	return nil
}

type CreatePromoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePromoResponse) Reset() {
	*x = CreatePromoResponse{}
	mi := &file_promo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePromoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePromoResponse) ProtoMessage() {}

func (x *CreatePromoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePromoResponse.ProtoReflect.Descriptor instead.
func (*CreatePromoResponse) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{3}
}

func (x *CreatePromoResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListPromoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     *string                `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
	Limit         *int64                 `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Offset        *int64                 `protobuf:"varint,3,opt,name=offset,proto3,oneof" json:"offset,omitempty"`
	SortBy        *PromoSortBy           `protobuf:"varint,4,opt,name=sort_by,json=sortBy,proto3,enum=api.PromoSortBy,oneof" json:"sort_by,omitempty"`
	Countries     []string               `protobuf:"bytes,5,rep,name=countries,proto3" json:"countries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPromoRequest) Reset() {
	*x = ListPromoRequest{}
	mi := &file_promo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPromoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPromoRequest) ProtoMessage() {}

func (x *ListPromoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPromoRequest.ProtoReflect.Descriptor instead.
func (*ListPromoRequest) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{4}
}

func (x *ListPromoRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

func (x *ListPromoRequest) GetLimit() int64 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *ListPromoRequest) GetOffset() int64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *ListPromoRequest) GetSortBy() PromoSortBy {
	if x != nil && x.SortBy != nil {
		return *x.SortBy
	}
	return PromoSortBy_ACTIVE_FROM
}

func (x *ListPromoRequest) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

type ListPromoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XTotalCount   int64                  `protobuf:"varint,1,opt,name=x_total_count,json=xTotalCount,proto3" json:"x_total_count,omitempty"`
	Promo         []*Promo               `protobuf:"bytes,2,rep,name=promo,proto3" json:"promo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPromoResponse) Reset() {
	*x = ListPromoResponse{}
	mi := &file_promo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPromoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPromoResponse) ProtoMessage() {}

func (x *ListPromoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPromoResponse.ProtoReflect.Descriptor instead.
func (*ListPromoResponse) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{5}
}

func (x *ListPromoResponse) GetXTotalCount() int64 {
	if x != nil {
		return x.XTotalCount
	}
	return 0
}

func (x *ListPromoResponse) GetPromo() []*Promo {
	if x != nil {
		return x.Promo
	}
	return nil
}

type GetPromoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     *string                `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
	PromoId       string                 `protobuf:"bytes,2,opt,name=promo_id,json=promoId,proto3" json:"promo_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPromoRequest) Reset() {
	*x = GetPromoRequest{}
	mi := &file_promo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPromoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromoRequest) ProtoMessage() {}

func (x *GetPromoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromoRequest.ProtoReflect.Descriptor instead.
func (*GetPromoRequest) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{6}
}

func (x *GetPromoRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

func (x *GetPromoRequest) GetPromoId() string {
	if x != nil {
		return x.PromoId
	}
	return ""
}

type GetPromoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Promo         *Promo                 `protobuf:"bytes,1,opt,name=promo,proto3" json:"promo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPromoResponse) Reset() {
	*x = GetPromoResponse{}
	mi := &file_promo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPromoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromoResponse) ProtoMessage() {}

func (x *GetPromoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromoResponse.ProtoReflect.Descriptor instead.
func (*GetPromoResponse) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{7}
}

func (x *GetPromoResponse) GetPromo() *Promo {
	if x != nil {
		return x.Promo
	}
	return nil
}

type UpdatePromoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     *string                `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
	PromoId       string                 `protobuf:"bytes,2,opt,name=promo_id,json=promoId,proto3" json:"promo_id,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ImageUrl      string                 `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Target        *Target                `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	MaxCount      int64                  `protobuf:"varint,6,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`
	ActiveFrom    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=active_from,json=activeFrom,proto3" json:"active_from,omitempty"`
	ActiveUntil   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=active_until,json=activeUntil,proto3" json:"active_until,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePromoRequest) Reset() {
	*x = UpdatePromoRequest{}
	mi := &file_promo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePromoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePromoRequest) ProtoMessage() {}

func (x *UpdatePromoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePromoRequest.ProtoReflect.Descriptor instead.
func (*UpdatePromoRequest) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePromoRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

func (x *UpdatePromoRequest) GetPromoId() string {
	if x != nil {
		return x.PromoId
	}
	return ""
}

func (x *UpdatePromoRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdatePromoRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *UpdatePromoRequest) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *UpdatePromoRequest) GetMaxCount() int64 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

func (x *UpdatePromoRequest) GetActiveFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveFrom
	}
	return nil
}

func (x *UpdatePromoRequest) GetActiveUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveUntil
	}
	return nil
}

type UpdatePromoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePromoResponse) Reset() {
	*x = UpdatePromoResponse{}
	mi := &file_promo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePromoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePromoResponse) ProtoMessage() {}

func (x *UpdatePromoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePromoResponse.ProtoReflect.Descriptor instead.
func (*UpdatePromoResponse) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{9}
}

type DeletePromoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CompanyId     *string                `protobuf:"bytes,1,opt,name=company_id,json=companyId,proto3,oneof" json:"company_id,omitempty"`
	PromoId       string                 `protobuf:"bytes,2,opt,name=promo_id,json=promoId,proto3" json:"promo_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePromoRequest) Reset() {
	*x = DeletePromoRequest{}
	mi := &file_promo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePromoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePromoRequest) ProtoMessage() {}

func (x *DeletePromoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePromoRequest.ProtoReflect.Descriptor instead.
func (*DeletePromoRequest) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{10}
}

func (x *DeletePromoRequest) GetCompanyId() string {
	if x != nil && x.CompanyId != nil {
		return *x.CompanyId
	}
	return ""
}

func (x *DeletePromoRequest) GetPromoId() string {
	if x != nil {
		return x.PromoId
	}
	return ""
}

type DeletePromoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeletePromoResponse) Reset() {
	*x = DeletePromoResponse{}
	mi := &file_promo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeletePromoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePromoResponse) ProtoMessage() {}

func (x *DeletePromoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePromoResponse.ProtoReflect.Descriptor instead.
func (*DeletePromoResponse) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{11}
}

type ActivatePromoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PromoId       string                 `protobuf:"bytes,1,opt,name=promo_id,json=promoId,proto3" json:"promo_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActivatePromoRequest) Reset() {
	*x = ActivatePromoRequest{}
	mi := &file_promo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivatePromoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivatePromoRequest) ProtoMessage() {}

func (x *ActivatePromoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivatePromoRequest.ProtoReflect.Descriptor instead.
func (*ActivatePromoRequest) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{12}
}

func (x *ActivatePromoRequest) GetPromoId() string {
	if x != nil {
		return x.PromoId
	}
	return ""
}

type ActivatePromoResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Code              string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	SuccessActivation bool                   `protobuf:"varint,2,opt,name=success_activation,json=successActivation,proto3" json:"success_activation,omitempty"`
	Reason            Reason                 `protobuf:"varint,3,opt,name=reason,proto3,enum=api.Reason" json:"reason,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ActivatePromoResponse) Reset() {
	*x = ActivatePromoResponse{}
	mi := &file_promo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActivatePromoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivatePromoResponse) ProtoMessage() {}

func (x *ActivatePromoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivatePromoResponse.ProtoReflect.Descriptor instead.
func (*ActivatePromoResponse) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{13}
}

func (x *ActivatePromoResponse) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ActivatePromoResponse) GetSuccessActivation() bool {
	if x != nil {
		return x.SuccessActivation
	}
	return false
}

func (x *ActivatePromoResponse) GetReason() Reason {
	if x != nil {
		return x.Reason
	}
	return Reason_OK
}

type Target struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgeFrom       *int64                 `protobuf:"varint,1,opt,name=age_from,json=ageFrom,proto3,oneof" json:"age_from,omitempty"`
	AgeUntil      *int64                 `protobuf:"varint,2,opt,name=age_until,json=ageUntil,proto3,oneof" json:"age_until,omitempty"`
	Country       *string                `protobuf:"bytes,3,opt,name=country,proto3,oneof" json:"country,omitempty"`
	Categories    []string               `protobuf:"bytes,4,rep,name=categories,proto3" json:"categories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Target) Reset() {
	*x = Target{}
	mi := &file_promo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Target) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Target) ProtoMessage() {}

func (x *Target) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Target.ProtoReflect.Descriptor instead.
func (*Target) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{14}
}

func (x *Target) GetAgeFrom() int64 {
	if x != nil && x.AgeFrom != nil {
		return *x.AgeFrom
	}
	return 0
}

func (x *Target) GetAgeUntil() int64 {
	if x != nil && x.AgeUntil != nil {
		return *x.AgeUntil
	}
	return 0
}

func (x *Target) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *Target) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

type Promo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PromoId       string                 `protobuf:"bytes,1,opt,name=promo_id,json=promoId,proto3" json:"promo_id,omitempty"`
	CompanyId     string                 `protobuf:"bytes,2,opt,name=company_id,json=companyId,proto3" json:"company_id,omitempty"`
	CompanyName   string                 `protobuf:"bytes,3,opt,name=company_name,json=companyName,proto3" json:"company_name,omitempty"`
	Mode          Mode                   `protobuf:"varint,4,opt,name=mode,proto3,enum=api.Mode" json:"mode,omitempty"`
	Codes         []*PromoCode           `protobuf:"bytes,5,rep,name=codes,proto3" json:"codes,omitempty"`
	Description   string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	ImageUrl      *string                `protobuf:"bytes,7,opt,name=image_url,json=imageUrl,proto3,oneof" json:"image_url,omitempty"`
	Target        *Target                `protobuf:"bytes,8,opt,name=target,proto3" json:"target,omitempty"`
	ActiveFrom    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=active_from,json=activeFrom,proto3,oneof" json:"active_from,omitempty"`
	ActiveUntil   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=active_until,json=activeUntil,proto3,oneof" json:"active_until,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Promo) Reset() {
	*x = Promo{}
	mi := &file_promo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Promo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Promo) ProtoMessage() {}

func (x *Promo) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Promo.ProtoReflect.Descriptor instead.
func (*Promo) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{15}
}

func (x *Promo) GetPromoId() string {
	if x != nil {
		return x.PromoId
	}
	return ""
}

func (x *Promo) GetCompanyId() string {
	if x != nil {
		return x.CompanyId
	}
	return ""
}

func (x *Promo) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *Promo) GetMode() Mode {
	if x != nil {
		return x.Mode
	}
	return Mode_COMMON
}

func (x *Promo) GetCodes() []*PromoCode {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *Promo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Promo) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *Promo) GetTarget() *Target {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *Promo) GetActiveFrom() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveFrom
	}
	return nil
}

func (x *Promo) GetActiveUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ActiveUntil
	}
	return nil
}

type PromoCode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Activations   int64                  `protobuf:"varint,2,opt,name=activations,proto3" json:"activations,omitempty"`
	MaxCount      int64                  `protobuf:"varint,3,opt,name=max_count,json=maxCount,proto3" json:"max_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromoCode) Reset() {
	*x = PromoCode{}
	mi := &file_promo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromoCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromoCode) ProtoMessage() {}

func (x *PromoCode) ProtoReflect() protoreflect.Message {
	mi := &file_promo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromoCode.ProtoReflect.Descriptor instead.
func (*PromoCode) Descriptor() ([]byte, []int) {
	return file_promo_proto_rawDescGZIP(), []int{16}
}

func (x *PromoCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PromoCode) GetActivations() int64 {
	if x != nil {
		return x.Activations
	}
	return 0
}

func (x *PromoCode) GetMaxCount() int64 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

var File_promo_proto protoreflect.FileDescriptor

var file_promo_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61,
	0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x12, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x23, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x6f, 0x6b, 0x22, 0xd2, 0x03, 0x0a, 0x12, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0b, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x20, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x3d, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x6e, 0x74,
	0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x6e, 0x74, 0x69,
	0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x22,
	0x25, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xec, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x62, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x48, 0x03, 0x52, 0x06, 0x73, 0x6f,
	0x72, 0x74, 0x42, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x69, 0x65, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x73, 0x6f,
	0x72, 0x74, 0x5f, 0x62, 0x79, 0x22, 0x59, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x78, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x78, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x05, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x22, 0x5f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69,
	0x64, 0x22, 0x34, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x52, 0x05, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x22, 0xdf, 0x02, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x88,
	0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x23, 0x0a, 0x06,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x3d, 0x0a, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x62, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x49, 0x64, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x31, 0x0a, 0x14, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x64, 0x22, 0x7f,
	0x0a, 0x15, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0xb0, 0x01, 0x0a, 0x06, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x08, 0x61, 0x67,
	0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x07,
	0x61, 0x67, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x20, 0x0a, 0x09, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52,
	0x08, 0x61, 0x67, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x61, 0x67, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x22, 0xc7, 0x03, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x19, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x23, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x40, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0c, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a,
	0x0a, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x22, 0x5e, 0x0a, 0x09,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x1e, 0x0a, 0x04,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x55, 0x4e, 0x49, 0x51, 0x55, 0x45, 0x10, 0x01, 0x2a, 0x30, 0x0a, 0x0b,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x53, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x0f, 0x0a, 0x0b, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x55, 0x4e, 0x54, 0x49, 0x4c, 0x10, 0x01, 0x2a, 0x38,
	0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00,
	0x12, 0x0d, 0x0a, 0x09, 0x41, 0x4e, 0x54, 0x49, 0x46, 0x52, 0x41, 0x55, 0x44, 0x10, 0x01, 0x12,
	0x17, 0x0a, 0x13, 0x4e, 0x4f, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x53, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x10, 0x02, 0x32, 0x9c, 0x05, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x57, 0x0a, 0x0b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x12, 0x4e, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12,
	0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x12, 0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x12, 0x56, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x14,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x2f,
	0x7b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x62, 0x0a, 0x0b, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x1a, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x5f,
	0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x12, 0x17, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x2a, 0x15, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x2f, 0x7b, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0x71, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x12, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x3a,
	0x01, 0x2a, 0x22, 0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x2f, 0x7b,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x12, 0x53, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x50, 0x69, 0x6e, 0x67, 0x12,
	0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x50, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x2f, 0x70, 0x69, 0x6e, 0x67, 0x42, 0x11, 0x5a, 0x0f, 0x70, 0x6b, 0x67, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
})

var (
	file_promo_proto_rawDescOnce sync.Once
	file_promo_proto_rawDescData []byte
)

func file_promo_proto_rawDescGZIP() []byte {
	file_promo_proto_rawDescOnce.Do(func() {
		file_promo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_promo_proto_rawDesc), len(file_promo_proto_rawDesc)))
	})
	return file_promo_proto_rawDescData
}

var file_promo_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_promo_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_promo_proto_goTypes = []any{
	(Mode)(0),                     // 0: api.Mode
	(PromoSortBy)(0),              // 1: api.PromoSortBy
	(Reason)(0),                   // 2: api.Reason
	(*PromoPingRequest)(nil),      // 3: api.PromoPingRequest
	(*PromoPingResponse)(nil),     // 4: api.PromoPingResponse
	(*CreatePromoRequest)(nil),    // 5: api.CreatePromoRequest
	(*CreatePromoResponse)(nil),   // 6: api.CreatePromoResponse
	(*ListPromoRequest)(nil),      // 7: api.ListPromoRequest
	(*ListPromoResponse)(nil),     // 8: api.ListPromoResponse
	(*GetPromoRequest)(nil),       // 9: api.GetPromoRequest
	(*GetPromoResponse)(nil),      // 10: api.GetPromoResponse
	(*UpdatePromoRequest)(nil),    // 11: api.UpdatePromoRequest
	(*UpdatePromoResponse)(nil),   // 12: api.UpdatePromoResponse
	(*DeletePromoRequest)(nil),    // 13: api.DeletePromoRequest
	(*DeletePromoResponse)(nil),   // 14: api.DeletePromoResponse
	(*ActivatePromoRequest)(nil),  // 15: api.ActivatePromoRequest
	(*ActivatePromoResponse)(nil), // 16: api.ActivatePromoResponse
	(*Target)(nil),                // 17: api.Target
	(*Promo)(nil),                 // 18: api.Promo
	(*PromoCode)(nil),             // 19: api.PromoCode
	(*timestamppb.Timestamp)(nil), // 20: google.protobuf.Timestamp
}
var file_promo_proto_depIdxs = []int32{
	0,  // 0: api.CreatePromoRequest.mode:type_name -> api.Mode
	17, // 1: api.CreatePromoRequest.target:type_name -> api.Target
	20, // 2: api.CreatePromoRequest.active_from:type_name -> google.protobuf.Timestamp
	20, // 3: api.CreatePromoRequest.active_until:type_name -> google.protobuf.Timestamp
	1,  // 4: api.ListPromoRequest.sort_by:type_name -> api.PromoSortBy
	18, // 5: api.ListPromoResponse.promo:type_name -> api.Promo
	18, // 6: api.GetPromoResponse.promo:type_name -> api.Promo
	17, // 7: api.UpdatePromoRequest.target:type_name -> api.Target
	20, // 8: api.UpdatePromoRequest.active_from:type_name -> google.protobuf.Timestamp
	20, // 9: api.UpdatePromoRequest.active_until:type_name -> google.protobuf.Timestamp
	2,  // 10: api.ActivatePromoResponse.reason:type_name -> api.Reason
	0,  // 11: api.Promo.mode:type_name -> api.Mode
	19, // 12: api.Promo.codes:type_name -> api.PromoCode
	17, // 13: api.Promo.target:type_name -> api.Target
	20, // 14: api.Promo.active_from:type_name -> google.protobuf.Timestamp
	20, // 15: api.Promo.active_until:type_name -> google.protobuf.Timestamp
	5,  // 16: api.PromoService.CreatePromo:input_type -> api.CreatePromoRequest
	7,  // 17: api.PromoService.ListPromo:input_type -> api.ListPromoRequest
	9,  // 18: api.PromoService.GetPromo:input_type -> api.GetPromoRequest
	11, // 19: api.PromoService.UpdatePromo:input_type -> api.UpdatePromoRequest
	13, // 20: api.PromoService.DeletePromo:input_type -> api.DeletePromoRequest
	15, // 21: api.PromoService.ActivatePromo:input_type -> api.ActivatePromoRequest
	3,  // 22: api.PromoService.PromoPing:input_type -> api.PromoPingRequest
	6,  // 23: api.PromoService.CreatePromo:output_type -> api.CreatePromoResponse
	8,  // 24: api.PromoService.ListPromo:output_type -> api.ListPromoResponse
	10, // 25: api.PromoService.GetPromo:output_type -> api.GetPromoResponse
	12, // 26: api.PromoService.UpdatePromo:output_type -> api.UpdatePromoResponse
	14, // 27: api.PromoService.DeletePromo:output_type -> api.DeletePromoResponse
	16, // 28: api.PromoService.ActivatePromo:output_type -> api.ActivatePromoResponse
	4,  // 29: api.PromoService.PromoPing:output_type -> api.PromoPingResponse
	23, // [23:30] is the sub-list for method output_type
	16, // [16:23] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_promo_proto_init() }
func file_promo_proto_init() {
	if File_promo_proto != nil {
		return
	}
	file_promo_proto_msgTypes[2].OneofWrappers = []any{}
	file_promo_proto_msgTypes[4].OneofWrappers = []any{}
	file_promo_proto_msgTypes[6].OneofWrappers = []any{}
	file_promo_proto_msgTypes[8].OneofWrappers = []any{}
	file_promo_proto_msgTypes[10].OneofWrappers = []any{}
	file_promo_proto_msgTypes[14].OneofWrappers = []any{}
	file_promo_proto_msgTypes[15].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_promo_proto_rawDesc), len(file_promo_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_promo_proto_goTypes,
		DependencyIndexes: file_promo_proto_depIdxs,
		EnumInfos:         file_promo_proto_enumTypes,
		MessageInfos:      file_promo_proto_msgTypes,
	}.Build()
	File_promo_proto = out.File
	file_promo_proto_goTypes = nil
	file_promo_proto_depIdxs = nil
}
