services:
    service_container:
        container_name: promo_code_service_container
        build:
            context: .
            dockerfile: docker/app/Dockerfile
        
        ports:
            - "${GRPC_PORT}:${GRPC_PORT}"
        
        restart: on-failure
        env_file:
            - .env
        depends_on:
            postgres:
             condition: service_healthy
            


    postgres:
        container_name: promocode_service_db
        image: postgres
        env_file:
        - .env 
        environment:
            POSTGRES_DB:  ${POSTGRES_DB}

            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} 
            PGDATA: /var/lib/postgresql/data
        ports:
        - ${POSTGRES_PORT}:5432
        
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
            interval: 10s
            timeout: 5s
            retries: 3


        restart: unless-stopped
        volumes:
         - postgres_data:/data/postgres

    redis:
        image: redis:7
        ports:
            - "${REDIS_PORT}:6377"
        volumes:
            - redis_data:/data
        command: [ "redis-server", "--appendonly", "yes" ]
        env_file:
            - .env
        

networks:
  default:
    external:
      name: shared-net
            
volumes:
    postgres_data:
    redis_data: